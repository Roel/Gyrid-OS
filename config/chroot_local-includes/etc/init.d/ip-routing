#!/bin/bash
### BEGIN INIT INFO
# Provides:          ip-routing
# Required-Start:    $local_fs $remote_fs $syslog
# Required-Stop:     $local_fs $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop IP-routing using iptables
### END INIT INFO-

# This is heavily based on the Gentoo home-router documentation.
#   http://www.gentoo.org/doc/en/home-router-howto.xml

flush() {
    # First we flush our current rules
    iptables -F
    iptables -t nat -F
}

setup() {
    # Setup default policies to handle unmatched traffic
    iptables -P INPUT ACCEPT
    iptables -P OUTPUT ACCEPT
    iptables -P FORWARD DROP

    # Copy and paste these examples ...
    export LAN=eth0
    export WAN=eth1

    # Then we lock our services so they only work from the LAN
    iptables -I INPUT 1 -i ${LAN} -j ACCEPT
    iptables -I INPUT 1 -i lo -j ACCEPT
    iptables -A INPUT -p UDP --dport bootps ! -i ${LAN} -j REJECT
    iptables -A INPUT -p UDP --dport domain ! -i ${LAN} -j REJECT

    # (Optional) Allow access to our ssh server from the WAN
    iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT

    # Drop TCP / UDP packets to privileged ports
    iptables -A INPUT -p TCP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP
    iptables -A INPUT -p UDP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP

    # Finally we add the rules for NAT
    iptables -I FORWARD -i ${LAN} -d 10.25.83.0/255.0.0.0 -j DROP
    iptables -A FORWARD -i ${LAN} -s 10.25.83.0/255.0.0.0 -j ACCEPT
    iptables -A FORWARD -i ${WAN} -d 10.25.83.0/255.0.0.0 -j ACCEPT
    iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE

    # Tell the kernel that ip forwarding is OK
    echo 1 > /proc/sys/net/ipv4/ip_forward
    for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done
}

case "$1" in
    start)
        flush
        setup
        ;;
    stop)
        flush
        ;;
    restart)
        start
        ;;
esac
